#ifndef TRAFFICO_API_H
#define TRAFFICO_API_H

#include <net/if.h>
#include <bpf/libbpf.h>

struct args
{
    bool verbose;
    char ifname[IF_NAMESIZE];
    int ifindex;
    enum bpf_tc_attach_point attach_point;
};

typedef int (*after_attach_fn)(struct bpf_tc_hook hook, struct bpf_tc_opts opts);

int exit_after_attach(struct bpf_tc_hook hook, struct bpf_tc_opts opts)
{
    return 0;
}

int detach(struct bpf_tc_hook hook, struct bpf_tc_opts opts)
{
    int err;
    char buf[100];
    buf[sizeof(buf) - 1] = '\0';

    opts.prog_fd = opts.prog_id = 0;
    opts.flags = 0;
    err = bpf_tc_detach(&hook, &opts);
    if (err)
    {
        libbpf_strerror(err, buf, sizeof(buf));
        fprintf(stderr, "traffico: errors detaching the TC eBPF program: %s\n", buf);
    }
    fprintf(stdout, "traffico: success detaching the TC eBPF program\n");

    return err;
}

${API}

#endif // TRAFFICO_API_H